# NGINX Configuration for SiteSpeak Blue-Green Deployment
# Supports WebSocket connections, SSL termination, and load balancing

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # WebSocket upgrade configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Blue-Green deployment upstreams
    upstream app_blue {
        # Blue deployment (current active)
        server sitespeak-web-blue:5000 max_fails=3 fail_timeout=10s;
        server sitespeak-web-blue-2:5000 max_fails=3 fail_timeout=10s backup;
    }

    upstream app_green {
        # Green deployment (staging/new)
        server sitespeak-web-green:5000 max_fails=3 fail_timeout=10s;
        server sitespeak-web-green-2:5000 max_fails=3 fail_timeout=10s backup;
    }

    upstream websocket_blue {
        # Blue WebSocket deployment
        server sitespeak-web-blue:5000 max_fails=3 fail_timeout=10s;
        keepalive 32;
    }

    upstream websocket_green {
        # Green WebSocket deployment
        server sitespeak-web-green:5000 max_fails=3 fail_timeout=10s;
        keepalive 32;
    }

    # Active deployment selection (blue/green)
    # This gets dynamically updated during deployments
    map $cookie_deployment $backend {
        green app_green;
        default app_blue;
    }

    map $cookie_deployment $ws_backend {
        green websocket_green;
        default websocket_blue;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ws:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl http2;
        server_name localhost sitespeak.local *.sitespeak.ai;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health check endpoints (no rate limiting)
        location /health {
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }

        # Blue-green deployment management endpoint
        location /admin/deployment {
            # Restrict to admin network
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;

            proxy_pass http://deployment-controller:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;

            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # CORS headers for production
            add_header Access-Control-Allow-Origin "https://app.sitespeak.ai" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since" always;
            add_header Access-Control-Allow-Credentials true always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Voice WebSocket endpoint with sticky sessions
        location /voice-ws {
            limit_req zone=ws burst=10 nodelay;
            limit_req_status 429;

            proxy_pass http://$ws_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket specific settings
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 10s;

            # Disable buffering for real-time communication
            proxy_buffering off;
        }

        # Voice widget static files (with versioning and long-term caching)
        location /voice-widget/ {
            alias /var/www/voice-widget/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Cross-Origin-Embedder-Policy require-corp;
            add_header Cross-Origin-Opener-Policy same-origin;

            # Fallback to blue deployment for widget assets
            try_files $uri @widget_fallback;
        }

        location @widget_fallback {
            proxy_pass http://app_blue;
            proxy_set_header Host $host;
        }

        # Audio WorkLet processor (critical for voice functionality)
        location /audio-worklet-processor.js {
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            expires 1d;
            add_header Cache-Control "public, max-age=86400";
            add_header Cross-Origin-Embedder-Policy require-corp;
            add_header Cross-Origin-Opener-Policy same-origin;
        }

        # Published sites routing (blue-green aware)
        location ~ ^/sites/([^/]+)/(.*)$ {
            set $site_id $1;
            set $site_path $2;

            # Route to appropriate deployment based on site configuration
            proxy_pass http://$backend/published/$site_id/$site_path;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Site-ID $site_id;

            # Cache published site assets
            location ~ \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 30d;
                add_header Cache-Control "public, immutable";
            }
        }

        # Static assets with aggressive caching
        location /static/ {
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Main application with general rate limiting
        location / {
            limit_req zone=general burst=50 nodelay;

            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;

            # Security headers for main app
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.sitespeak.ai; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: https:; font-src 'self' data:; media-src 'self'; object-src 'none'; frame-src 'none';" always;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            root /var/www/error-pages;
            internal;
        }

        location = /50x.html {
            root /var/www/error-pages;
            internal;
        }
    }

    # Admin interface for blue-green deployment management
    server {
        listen 8080 ssl;
        server_name admin.sitespeak.local;

        # SSL configuration (same as main)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Restrict access to admin networks
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;

        location / {
            proxy_pass http://deployment-controller:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# TCP load balancing for database connections (if needed)
stream {
    # PostgreSQL primary/replica routing
    upstream postgres_primary {
        server postgres-primary:5432 max_fails=3 fail_timeout=10s;
    }

    upstream postgres_replica {
        server postgres-replica-1:5432 max_fails=3 fail_timeout=10s;
        server postgres-replica-2:5432 max_fails=3 fail_timeout=10s;
    }

    # Redis cluster routing
    upstream redis_cluster {
        server redis-node-1:6379 max_fails=3 fail_timeout=10s;
        server redis-node-2:6379 max_fails=3 fail_timeout=10s;
        server redis-node-3:6379 max_fails=3 fail_timeout=10s;
    }
}