apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-controller
  namespace: sitespeak
  labels:
    app: deployment-controller
    component: deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-controller
  template:
    metadata:
      labels:
        app: deployment-controller
        component: deployment
    spec:
      serviceAccountName: deployment-controller
      containers:
      - name: controller
        image: sitespeak/deployment-controller:latest
        ports:
        - name: http
          containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: KUBERNETES_NAMESPACE
          value: "sitespeak"
        - name: BLUE_SERVICE
          value: "sitespeak-blue-service"
        - name: GREEN_SERVICE
          value: "sitespeak-green-service"
        - name: ACTIVE_SERVICE
          value: "sitespeak-active-service"
        envFrom:
        - secretRef:
            name: sitespeak-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: kubeconfig
          mountPath: /etc/kubernetes
          readOnly: true
      volumes:
      - name: kubeconfig
        secret:
          secretName: deployment-controller-kubeconfig
      nodeSelector:
        kubernetes.io/arch: amd64

---
apiVersion: v1
kind: Service
metadata:
  name: deployment-controller-service
  namespace: sitespeak
  labels:
    app: deployment-controller
spec:
  selector:
    app: deployment-controller
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  type: ClusterIP

---
# ServiceAccount with necessary permissions for blue-green management
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployment-controller
  namespace: sitespeak

---
# ClusterRole for deployment management
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployment-controller
rules:
# Deployments
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "update", "patch"]
# Services
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "update", "patch"]
# ConfigMaps
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "update", "patch"]
# Pods for health checking
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# Events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]

---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deployment-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployment-controller
subjects:
- kind: ServiceAccount
  name: deployment-controller
  namespace: sitespeak

---
# Horizontal Pod Autoscaler for web services
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sitespeak-web-blue-hpa
  namespace: sitespeak
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sitespeak-web-blue
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sitespeak-web-green-hpa
  namespace: sitespeak
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sitespeak-web-green
  minReplicas: 0  # Start with 0, scale up during deployment
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# Network Policy for deployment controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deployment-controller-netpol
  namespace: sitespeak
spec:
  podSelector:
    matchLabels:
      app: deployment-controller
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: nginx-ingress
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 3001
  egress:
  - to: []  # Allow all egress for Kubernetes API access
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443
  - to:
    - podSelector:
        matchLabels:
          app: sitespeak-web
    ports:
    - protocol: TCP
      port: 5000