# üéØ SiteSpeak Environment Configuration Template
# Copy this file to .env and fill in your actual values

# SiteSpeak Configuration
SITESPEAK_MAIN_SITE_ID=00000000-0000-0000-0000-000000000000
SITESPEAK_DEVELOPMENT_MODE=true

# ================================
# üî• REQUIRED VARIABLES
# ================================

# OpenAI API Key (REQUIRED - Voice AI i√ßin)
OPENAI_API_KEY=sk-your-openai-api-key-here

# JWT Secret (REQUIRED - minimum 32 karakter)
# Use a secure random secret for signing JWTs. Do NOT commit real secrets.
# Example generator (64 hex chars / 32 bytes):
#   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-super-secure-jwt-secret-at-least-32-chars-long

# Encryption Key (REQUIRED - tam 32 karakter)
# Used for server-side symmetric encryption. Generate exactly 32 hex characters
# (16 bytes -> 32 hex chars). Example generator:
#   node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
ENCRYPTION_KEY=your-exactly-32-character-key-here

# ================================
# üåê APPLICATION CONFIGURATION
# ================================

NODE_ENV=development
PORT=5000

# Frontend & Backend URLs
FRONTEND_URL=http://localhost:3000
BACKEND_URL=http://localhost:5000
CLIENT_URL=http://localhost:3000
# Optional feature toggles
AUTO_CRAWLER_ENABLED=true
ADVANCED_EXTRACTION=true
AUTO_INDEX_CRON=
USE_LANGGRAPH_AGENT=true
SITESPEAK_KB_QUIET=true

# Widget & Demo URLs  
WIDGET_URL=http://localhost:8080

# ================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ================================

# PostgreSQL Database (Neon/Supabase destekli veya local Docker)
# √ñrnek Neon/Supabase URL:
# DATABASE_URL=postgresql://user:pass@db.neon.tech/sitespeak
DATABASE_URL=postgresql://postgres:postgres@localhost:5433/sitespeak_dev_db

# Redis Cache (Upstash veya local Docker)
# Upstash √∂rnek: rediss://:<password>@<host>:<port>
REDIS_URL=redis://localhost:6380
# Alternative Redis config (crawler/jobs). REDIS_URL yoksa kullanƒ±lƒ±r
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Docker Database Settings
POSTGRES_DB=sitespeak_dev_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# ================================
# ü§ñ AI & VOICE CONFIGURATION
# ================================

# AI Models
AI_MODEL=gpt-4o
# Not: backend varsayƒ±lanƒ± text-embedding-3-small
EMBEDDING_MODEL=text-embedding-3-small
MAX_TOKENS=4000
INTENT_ENGINE_ENABLED=true
ENABLE_VECTOR_PERSIST=false
# When true, auto-crawler will use the Playwright-based crawler to render JS-heavy pages.
# Requires installing Playwright and its browsers: `cd server && npm install && npx playwright install --with-deps`
USE_PLAYWRIGHT_CRAWLER=false

# Optional: bearer token used by the auto-crawler when requesting protected backend API endpoints
# Set this to a valid JWT (e.g. from POST /api/auth/login) so the crawler can access /api/sites, etc.
# Example: CRAWLER_AUTH_TOKEN=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
CRAWLER_AUTH_TOKEN=

# HuggingFace API Key (optional, for alternative AI models)
HUGGINGFACE_API_KEY=your-huggingface-api-key-here

# ElevenLabs API Key (optional, for premium voice synthesis)
ELEVENLABS_API_KEY=your-elevenlabs-api-key-here

# Deepgram API Key (optional, for premium speech-to-text)
DEEPGRAM_API_KEY=your-deepgram-api-key-here

# LangSmith Configuration (optional, for AI observability and monitoring)
LANGSMITH_API_KEY=your-langsmith-api-key-here
LANGSMITH_PROJECT=sitespeak
LANGSMITH_ENABLED=false
TRACE_SAMPLE_RATE=1.0

# ==== FILE STORAGE ====
# AWS S3 Configuration (optional, for file storage)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_BUCKET_NAME=sitespeak-uploads

# ==== CDN & PERFORMANCE ====
# Cloudflare (DNS, Pages, R2, Universal SSL)
CLOUDFLARE_API_TOKEN=your-cloudflare-api-token
CLOUDFLARE_ACCOUNT_ID=your-cloudflare-account-id
CLOUDFLARE_ZONE_ID=your-cloudflare-zone-id
# Cloudflare Pages Deploy
CLOUDFLARE_PAGES_PROJECT=sitespeak-sites
CLOUDFLARE_PAGES_BRANCH=main
# Cloudflare R2 (S3-compatible)
R2_ACCOUNT_ID=your-r2-account-id
R2_ACCESS_KEY_ID=your-r2-access-key
R2_SECRET_ACCESS_KEY=your-r2-secret
R2_BUCKET=sitespeak-assets
R2_PUBLIC_URL=https://pub-xxxxxxxxxxxxxxxx.r2.dev
# Cache controls (optional)
CDN_ENABLED=false
CACHE_TTL=86400
STATIC_CACHE_TTL=604800

# ==== DOMAIN & SSL ====
# Main domain for the platform
MAIN_DOMAIN=sitespeak.com
# Domain for published sites
SITES_DOMAIN=sites.sitespeak.com
# Public server IP (for DNS/Cloudflare automation)
SERVER_IP=127.0.0.1
# ACME/Let's Encrypt
SSL_EMAIL=admin@sitespeak.com
SSL_STAGING=false

# ==== EMAIL CONFIGURATION ====
# SMTP Configuration for sending emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# SendGrid API Key (alternative to SMTP)
SENDGRID_API_KEY=your-sendgrid-api-key

# ==== ANALYTICS & MONITORING ====
# Plausible
PLAUSIBLE_DOMAIN=app.sitespeak.com
PLAUSIBLE_API_HOST=https://plausible.io
PLAUSIBLE_ENABLED=false

# PostHog
POSTHOG_API_KEY=your-posthog-api-key
POSTHOG_HOST=https://app.posthog.com
POSTHOG_ENABLED=false

# Sentry for error tracking
SENTRY_DSN=your-sentry-dsn-here
SENTRY_ENV=development
SENTRY_TRACES_SAMPLE_RATE=0.1
SENTRY_PROFILES_SAMPLE_RATE=0.1

# ==== BILLING (Stripe) ====
# Stripe secret keys and pricing IDs (fill via GitHub Secrets in CI)
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret
STRIPE_PRICE_FREE=price_your-free-price-id
STRIPE_PRICE_BASIC=price_your-basic-price-id
STRIPE_PRICE_PRO=price_your-pro-price-id
STRIPE_BILLING_PORTAL_URL=https://billing.stripe.com/p/login/test_xxxxxx
STRIPE_SUCCESS_URL=http://localhost:3000/billing/success
STRIPE_CANCEL_URL=http://localhost:3000/billing/cancel
PLAN_FREE_AI_TOKENS=200000
PLAN_BASIC_AI_TOKENS=2000000
PLAN_PRO_AI_TOKENS=10000000
PLAN_FREE_KB_MB=50
PLAN_BASIC_KB_MB=500
PLAN_PRO_KB_MB=5000

# ==== DEVELOPMENT TOOLS ====
# Enable debug logging
DEBUG=sitespeak:*
# Relax strict-mode checks (dev only)
NO_STRICT_CHECKS=false

# Hot reload for development
CHOKIDAR_USEPOLLING=true

# ==== SECURITY ====
# Rate limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000

# CORS origins (comma separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# ==== VOICE AI CONFIGURATION ====
# Default voice settings
DEFAULT_VOICE_LANGUAGE=en-EN
DEFAULT_TTS_VOICE=alloy
VOICE_RESPONSE_TIMEOUT=30000

# Knowledge base settings
KB_MIN_SIMILARITY=0.7
KNOWLEDGE_BASE_MAX_CHUNKS=1000
KNOWLEDGE_BASE_CHUNK_SIZE=1000
KNOWLEDGE_BASE_OVERLAP_SIZE=100
KB_VECTOR_INDEX=hnsw   # or ivfflat
KB_HNSW_M=16
KB_HNSW_EF_CONSTRUCTION=128
# KB_HNSW_EF_SEARCH=64
KB_IVFFLAT_LISTS=100
KB_IVFFLAT_PROBES=10
# KB_ANALYZE_ON_COMMIT=true

# ==== PUBLISHING PATHS ====
# Static publish & upload directories (server-side)
PUBLISH_PATH=./published-sites
PUBLISHED_SITES_PATH=./published-sites
UPLOADS_PATH=./uploads

# ==== SERVICE URL OVERRIDES ====
# Optional: split services; gateway/proxy reads these
AUTH_SERVICE_URL=http://localhost:5001
SITES_SERVICE_URL=http://localhost:5002
AI_SERVICE_URL=http://localhost:5003
ANALYTICS_SERVICE_URL=http://localhost:5004
GATEWAY_PORT=5000
AUTH_SERVICE_PORT=5001
SITES_SERVICE_PORT=5002

# ==== RUNTIME URLS ====
# Websocket URL for voice (if proxied elsewhere)
WEBSOCKET_URL=ws://localhost:3001/voice
# Server base URL for asset links
BASE_URL=http://localhost:5000
# Sites base URL used in publishing contracts
SITES_BASE_URL=sitespeak.com

# ==== CRAWLER ====
MAX_CONCURRENT_CRAWLERS=3
CRAWLER_USER_AGENT="SiteSpeak-Crawler/1.0 (+https://sitespeak.ai/bot)"
LOG_LEVEL=info

# ==== TESTING (optional) ====
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/sitespeak_test
TEST_REDIS_URL=redis://localhost:6379/1

# ==== DOCKER SPECIFIC ====
# These are used in docker-compose files
POSTGRES_DB=sitespeak_dev_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres

# Frontend -> Backend public URL (for Pages / client builds)
NEXT_PUBLIC_API_URL=https://api.your-domain.com